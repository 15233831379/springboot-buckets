<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaniuniu.generator.dao.ProblemMapper">
  <resultMap id="BaseResultMap" type="com.javaniuniu.generator.domain.Problem">
    <id column="problemID" jdbcType="BIGINT" property="problemid" />
    <result column="cnUrl" jdbcType="VARCHAR" property="cnurl" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="enUrl" jdbcType="VARCHAR" property="enurl" />
    <result column="indexNum" jdbcType="VARCHAR" property="indexnum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="questionTitleSlug" jdbcType="VARCHAR" property="questiontitleslug" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    problemID, cnUrl, `date`, enUrl, indexNum, `name`, questionTitleSlug
  </sql>
  <select id="selectByExample" parameterType="com.javaniuniu.generator.domain.ProblemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from Problem
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Problem
    where problemID = #{problemid,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from Problem
    where problemID = #{problemid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Problem
    where problemID = #{problemid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.javaniuniu.generator.domain.ProblemExample">
    delete from Problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.javaniuniu.generator.domain.Problem">
    <selectKey keyProperty="problemid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Problem (cnUrl, `date`, enUrl, 
      indexNum, `name`, questionTitleSlug
      )
    values (#{cnurl,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{enurl,jdbcType=VARCHAR}, 
      #{indexnum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{questiontitleslug,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.javaniuniu.generator.domain.Problem">
    <selectKey keyProperty="problemid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Problem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cnurl != null">
        cnUrl,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="enurl != null">
        enUrl,
      </if>
      <if test="indexnum != null">
        indexNum,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="questiontitleslug != null">
        questionTitleSlug,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cnurl != null">
        #{cnurl,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="enurl != null">
        #{enurl,jdbcType=VARCHAR},
      </if>
      <if test="indexnum != null">
        #{indexnum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="questiontitleslug != null">
        #{questiontitleslug,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.javaniuniu.generator.domain.ProblemExample" resultType="java.lang.Long">
    select count(*) from Problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Problem
    <set>
      <if test="record.problemid != null">
        problemID = #{record.problemid,jdbcType=BIGINT},
      </if>
      <if test="record.cnurl != null">
        cnUrl = #{record.cnurl,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.enurl != null">
        enUrl = #{record.enurl,jdbcType=VARCHAR},
      </if>
      <if test="record.indexnum != null">
        indexNum = #{record.indexnum,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.questiontitleslug != null">
        questionTitleSlug = #{record.questiontitleslug,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Problem
    set problemID = #{record.problemid,jdbcType=BIGINT},
      cnUrl = #{record.cnurl,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=VARCHAR},
      enUrl = #{record.enurl,jdbcType=VARCHAR},
      indexNum = #{record.indexnum,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      questionTitleSlug = #{record.questiontitleslug,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.javaniuniu.generator.domain.Problem">
    update Problem
    <set>
      <if test="cnurl != null">
        cnUrl = #{cnurl,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="enurl != null">
        enUrl = #{enurl,jdbcType=VARCHAR},
      </if>
      <if test="indexnum != null">
        indexNum = #{indexnum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="questiontitleslug != null">
        questionTitleSlug = #{questiontitleslug,jdbcType=VARCHAR},
      </if>
    </set>
    where problemID = #{problemid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.javaniuniu.generator.domain.Problem">
    update Problem
    set cnUrl = #{cnurl,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=VARCHAR},
      enUrl = #{enurl,jdbcType=VARCHAR},
      indexNum = #{indexnum,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      questionTitleSlug = #{questiontitleslug,jdbcType=VARCHAR}
    where problemID = #{problemid,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.javaniuniu.generator.domain.ProblemExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from Problem
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>